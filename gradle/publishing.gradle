publishing {
	publications {
		mavenJava(MavenPublication) {
			pom.withXml {
				def root = asNode()
				root.appendNode('url', 'https://github.com/ShaneMcC/dflibs-signalr')
				root.appendNode('name', "${group}:${artifactId}")
				root.appendNode('description', 'Dataforce SignalR Client Library')

				def scm = root.appendNode('scm')
				scm.appendNode('url', 'https://github.com/ShaneMcC/dflibs-signalr')
				scm.appendNode('connection', 'scm:git:https://github.com/ShaneMcC/dflibs-signalr.git')
				scm.appendNode('developerConnection', 'scm:ssh://git@github.com:ShaneMcC/dflibs-signalr.git')

				def license = root.appendNode('licenses').appendNode('license')
				license.appendNode('name', 'MIT License')
				license.appendNode('url', 'http://www.opensource.org/licenses/mit-license.php')

				def issues = root.appendNode('issueManagement')
				issues.appendNode('system', 'GitHub Issues')
				issues.appendNode('url', 'https://github.com/ShaneMcC/dflibs-signalr/issues')

				def developers = root.appendNode('developers')
				def shane = developers.appendNode('developer')
				shane.appendNode('name', 'Shane Mc Cormack')
				shane.appendNode('email', 'shanemcc@gmail.com')

				asNode().'*'.findAll{ (it.name() instanceof groovy.xml.QName ? it.name().getLocalPart() : it.name()) == 'dependencies' }.each{it.parent().remove(it)}
				def dependenciesNode = asNode().appendNode('dependencies')

				configurations.compile.allDependencies.each {
					def dependencyNode = dependenciesNode.appendNode('dependency')
					dependencyNode.appendNode('groupId', it.group)
					dependencyNode.appendNode('artifactId', it.name)
					dependencyNode.appendNode('version', it.version)
				}

				configurations.testCompile.allDependencies.each {
					def dependencyNode = dependenciesNode.appendNode('dependency')
					dependencyNode.appendNode('groupId', it.group)
					dependencyNode.appendNode('artifactId', it.name)
					dependencyNode.appendNode('version', it.version)
					dependencyNode.appendNode('scope', 'test')
				}
			}

			from components.java

			groupId 'uk.org.dataforce.libs'
			artifactId 'signalr'
			version project.version
		}
	}
	repositories {
		maven {
			if (project.version.endsWith('-SNAPSHOT')) {
				url "https://maven.shanemcc.net/snapshots"
			} else {
				url "https://maven.shanemcc.net/releases"
			}
			credentials {
				username = project.findProperty("reposiliteUser") ?: System.getenv('REPOSILITE_USER')
				password = project.findProperty("reposiliteToken") ?:  System.getenv('REPOSILITE_TOKEN')
			}
			authentication {
				basic(BasicAuthentication)
			}
		}
	}
}

publish {
	// TODO: This shouldn't shell out to git.
	ext.getGitVersion = {directory ->
		def stdout = new ByteArrayOutputStream()
		exec {
			commandLine 'git', "--git-dir=" + (new File(directory, ".git")).getAbsolutePath(), 'describe', '--tags'
			standardOutput = stdout
			ignoreExitValue = true
		}
		return stdout.toString().trim().isEmpty() ? "Unknown" : stdout.toString().trim();
	}

	project.version = getGitVersion(project.projectDir)
	if (project.version.matches(/(?i).*-[0-9]+-g[0-9a-f]+$/)) {
		project.version = project.version + '-SNAPSHOT'
	}
}
